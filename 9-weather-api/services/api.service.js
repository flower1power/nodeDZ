import dotenv from 'dotenv';
import axios from 'axios';

dotenv.config();

const API_KEY = process.env.API_KEY;
const BASE_URL = 'https://api.openweathermap.org';

if (!API_KEY) {
  throw new Error('‚ùå API_KEY –Ω–µ –∑–∞–¥–∞–Ω –≤ .env!');
}

const _getCoordinates = async (city) => {
  console.log(`üîç –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –≥–æ—Ä–æ–¥–∞: ${city}`);

  const url = `${BASE_URL}/geo/1.0/direct?q=${city}&limit=1&appid=${API_KEY}`;
  const { data } = await axios.get(url);

  if (data.length === 0) {
    throw new Error(`–ì–æ—Ä–æ–¥ ${city} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
  }

  return { lat: data[0].lat, lon: data[0].lon };
};

const getWeather = async (city, lang = 'ru') => {
  const { lat, lon } = await _getCoordinates(city);

  console.log(`üåç –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–≥–æ–¥—É –¥–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç: lat=${lat}, lon=${lon}`);

  const url = new URL(`${BASE_URL}/data/2.5/weather`);
  const { data } = await axios.get(`${url}`, {
    params: {
      lat,
      lon,
      appid: API_KEY,
      units: 'metric',
      lang,
    },
  });

  console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ –ø–æ–≥–æ–¥–∞ –¥–ª—è ${city}`);

  return {
    description: data.weather[0].description,
    temperature: data.main.temp,
    humidity: data.main.humidity,
    wind_speed: data.wind.speed,
  };
};

export default getWeather;
