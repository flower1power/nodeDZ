import axios, { AxiosError } from 'axios';

const _getCoordinates = async (city) => {
  console.log(`üîç –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –¥–ª—è –≥–æ—Ä–æ–¥–∞: ${city}`);

  try {
    const url = `${process.env.BASE_URL}/geo/1.0/direct?q=${city}&limit=1&appid=${process.env.API_KEY}`;
    const { data } = await axios.get(url);

    if (data.length === 0) {
      throw new Error(`–ì–æ—Ä–æ–¥ ${city} –Ω–µ –Ω–∞–π–¥–µ–Ω`);
    }

    return { lat: data[0].lat, lon: data[0].lon };
  } catch (err) {
    if (err instanceof AxiosError) {
      console.error(
        `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –¥–ª—è –≥–æ—Ä–æ–¥–∞ "${city}":`,
        err.message,
      );
    } else {
      console.error(
        `‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç –¥–ª—è –≥–æ—Ä–æ–¥–∞ "${city}":`,
        err.message,
      );
    }
  }
};

const getWeather = async (city, lang = 'ru') => {
  const { lat, lon } = await _getCoordinates(city);

  console.log(`üåç –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–≥–æ–¥—É –¥–ª—è –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç: lat=${lat}, lon=${lon}`);

  try {
    const url = new URL(`${process.env.BASE_URL}/data/2.5/weather`);
    const { data } = await axios.get(`${url}`, {
      params: {
        lat,
        lon,
        appid: process.env.API_KEY,
        units: 'metric',
        lang,
      },
    });

    console.log(`‚úÖ –ü–æ–ª—É—á–µ–Ω–∞ –ø–æ–≥–æ–¥–∞ –¥–ª—è ${city}`);

    return {
      description: data.weather[0].description,
      temperature: data.main.temp,
      humidity: data.main.humidity,
      wind_speed: data.wind.speed,
    };
  } catch (err) {
    if (err instanceof AxiosError) {
      console.error(
        `‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã –¥–ª—è –≥–æ—Ä–æ–¥–∞ "${city}":`,
        err.message,
      );
    } else {
      console.error(
        `‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ–≥–æ–¥—ã –¥–ª—è –≥–æ—Ä–æ–¥–∞ "${city}":`,
        err,
      );
    }
  }
};

export default getWeather;
